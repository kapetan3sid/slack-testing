name: PR Slack Notify

on:
  pull_request:
    types:
      - review_requested  # When a reviewer is assigned
      - assigned          # When an assignee is assigned

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm install @slack/web-api

      - name: Notify assigned reviewers via Slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          node <<'EOF'
          const { WebClient } = require('@slack/web-api');
          const fs = require('fs');
          
          async function main() {
            try {
              // Validate required environment variables
              if (!process.env.SLACK_BOT_TOKEN) {
                console.error('Error: SLACK_BOT_TOKEN environment variable is required');
                process.exit(1);
              }

              if (!process.env.GITHUB_EVENT_PATH) {
                console.error('Error: GITHUB_EVENT_PATH environment variable is required');
                process.exit(1);
              }

              // Read Slack mapping file from repo root
              const mapping = JSON.parse(fs.readFileSync('engineer-github-slack-mapping.json', 'utf8'));
              const slack = new WebClient(process.env.SLACK_BOT_TOKEN);

              const eventPath = process.env.GITHUB_EVENT_PATH;
              const event = JSON.parse(fs.readFileSync(eventPath, 'utf8'));

              // The Slack Channel ID you want to post in:
              const CHANNEL_ID = 'C07TXJZ0T3L'; // Your actual channel ID

              let reviewers = [];
              let assignees = [];

              // If action is assigning a reviewer (PR event: review_requested)
              if (event.action === 'review_requested' && event.requested_reviewer) {
                // Single reviewer assigned
                reviewers.push(event.requested_reviewer.login);
              }
              // If action is assigning an assignee (PR event: assigned)
              else if (event.action === 'assigned' && event.assignee) {
                assignees.push(event.assignee.login);
              }
              // If PR is opened or ready, get all requested reviewers and assignees
              else if (event.pull_request) {
                if (Array.isArray(event.pull_request.requested_reviewers)) {
                  reviewers = event.pull_request.requested_reviewers.map(r => r.login);
                }
                if (Array.isArray(event.pull_request.assignees)) {
                  assignees = event.pull_request.assignees.map(a => a.login);
                }
              }

              // Remove dupes
              reviewers = [...new Set(reviewers)];
              assignees = [...new Set(assignees)];

              // Notify each mapped reviewer
              for (const reviewer of reviewers) {
                const engineer = mapping.engineers.find(e => e.github_username === reviewer);
                if (engineer) {
                  try {
                    const res = await slack.chat.postMessage({
                      channel: CHANNEL_ID,
                      text: `Hey <@${engineer.slack_id}>, you've been assigned to review a PR: ${event.pull_request.html_url}`
                    });
                    console.log("Slack sent to reviewer:", reviewer, res.ok);
                  } catch (err) {
                    console.error("Slack error for reviewer:", reviewer, err.data || err);
                  }
                } else {
                  console.log(`No Slack mapping found for reviewer ${reviewer}`);
                }
              }

              // Notify each mapped assignee
              for (const assignee of assignees) {
                const engineer = mapping.engineers.find(e => e.github_username === assignee);
                if (engineer) {
                  try {
                    const res = await slack.chat.postMessage({
                      channel: CHANNEL_ID,
                      text: `Hey <@${engineer.slack_id}>, you've been assigned to a PR: ${event.pull_request.html_url}`
                    });
                    console.log("Slack sent to assignee:", assignee, res.ok);
                  } catch (err) {
                    console.error("Slack error for assignee:", assignee, err.data || err);
                  }
                } else {
                  console.log(`No Slack mapping found for assignee ${assignee}`);
                }
              }
            } catch (error) {
              console.error('Script error:', error);
              process.exit(1);
            }
          }

          main();
          EOF
